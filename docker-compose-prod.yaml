version: '3'

services:
  mongo:
    image: mongo
    tty: true
    volumes:
      - ./local/mongo:/data/db
    restart: on-failure

  redis:
    image: redis
    volumes:
      - ./local/redis:/data
    command: redis-server --appendonly yes
    restart: on-failure

  api:
    image: obs-api
    build:
      context: ./api
    volumes:
      - ./api/src:/opt/obs/api/src
      - ./api/scripts/obs:/opt/obs/api/scripts/obs
      - ./api/views:/opt/obs/api/views
      - ./local/api-data:/data
      - ./api/.migrations.js:/opt/obs/api/.migrations.js
      - ./api/migrations:/opt/obs/api/migrations/
      - ./api/config.json:/opt/obs/api/config.json
    environment:
      - PORT=3000
      - MONGODB_URL=mongodb://mongo/obsTest
      - DATA_DIR=/data
    links:
      - mongo
      - redis
    ports:
      - '3000:3000'
    restart: on-failure
    command:
      - npm
      - run
      - dev

  worker:
    image: obs-api
    build:
      context: ./api
    volumes:
      - ./api/src:/opt/obs/api/src
      - ./api/scripts/obs:/opt/obs/api/scripts/obs
      - ./api/views:/opt/obs/api/views
      - ./local/api-data:/data
      - ./api/config.json:/opt/obs/api/config.json
    environment:
      - DATA_DIR=/data
    links:
      - mongo
      - redis
    restart: on-failure
    command:
      - npm
      - run
      - dev:worker

  frontend:
    image: obs-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile-prod
    links:
      - api
    ports:
      - '3001:80'
    restart: on-failure
